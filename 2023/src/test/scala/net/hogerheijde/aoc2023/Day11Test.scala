package net.hogerheijde.aoc2023

import fastparse.*
import net.hogerheijde.aoc.common.model.Coordinate
import net.hogerheijde.aoc.util.Parser
import net.hogerheijde.aoc2023.Day11.expand
import net.hogerheijde.aoc2023.Day11.pairs
import net.hogerheijde.aoc2023.Day11.manhattan
import org.scalatest.matchers.should.Matchers
import org.scalatest.wordspec.AnyWordSpec

class Day11Test extends AnyWordSpec with Matchers {

  val exampleInput: String =
    """...#......
      |.......#..
      |#.........
      |..........
      |......#...
      |.#........
      |.........#
      |..........
      |.......#..
      |#...#.....
      |""".stripMargin

  val exampleInputExpanded: String =
    """....#........
      |.........#...
      |#............
      |.............
      |.............
      |........#....
      |.#...........
      |............#
      |.............
      |.............
      |.........#...
      |#....#.......""".stripMargin


  val expanded10Times: String =
    """............#........................
      |.........................#...........
      |#....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |........................#............
      |.#...................................
      |....................................#
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.....................................
      |.........................#...........
      |#............#.......................""".stripMargin

  "Day 11" should {

    "expand input" in {
      Day11.expand(Day11.universes(exampleInput), 2) should be (
        Seq(
          Coordinate(0, 4),
          Coordinate(1, 9),
          Coordinate(2, 0),
          Coordinate(5, 8),
          Coordinate(6, 1),
          Coordinate(7, 12),
          Coordinate(10, 9),
          Coordinate(11, 0),
          Coordinate(11, 5),
        )
      )


      Day11.expand(Day11.universes(exampleInput), 10) should be (
        Day11.universes(expanded10Times)
      )

    }

    "parse input" in {
      Day11.parse(exampleInput) should be(
        Seq(
          Coordinate(0, 3),
          Coordinate(1, 7),
          Coordinate(2, 0),
          Coordinate(4, 6),
          Coordinate(5, 1),
          Coordinate(6, 9),
          Coordinate(8, 7),
          Coordinate(9, 0),
          Coordinate(9, 4),
        )
      )
    }

    "Part1: example answer" in {
      Day11.part1(Day11.parse(exampleInput)) should be(374)
    }

    "Part2: example expanded multiple times" in {
      Day11.expand(Day11.universes(exampleInput), 10).pairs.map { (a, b) => a.manhattan(b) }.sum should be (1030)
      Day11.expand(Day11.universes(exampleInput), 100).pairs.map { (a, b) => a.manhattan(b) }.sum should be (8410)
    }

    "Part2: example answer" in {
      Day11.part2(Day11.parse(exampleInput)) should be(0)
    }
  }
}